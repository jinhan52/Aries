<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kim.security.aries.mapper.RolesMapper">
  <resultMap id="BaseResultMap" type="com.kim.security.aries.model.Roles">
    <!--@mbg.generated-->
    <!--@Table roles-->
    <id column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="stauts" jdbcType="INTEGER" property="stauts" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="BaseResultMapWithPermission" type="com.kim.security.aries.model.Roles">
    <!--@mbg.generated-->
    <!--@Table roles-->
    <id column="roleid" jdbcType="INTEGER" property="roleid" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="stauts" jdbcType="INTEGER" property="stauts" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <collection property="allPermission" column="roleid" select="com.kim.security.aries.mapper.PermissionMapper.getRolePermission" ofType="com.kim.security.aries.model.Roles"></collection>
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    roleid, rolename, stauts, create_time, update_time
  </sql>


  <select id="getAllRoles" resultMap="BaseResultMapWithPermission">
    select <include refid="Base_Column_List">
  </include> from roles
    <where>
      <if test="search != null and search != ''">
        rolename like concat('%',#{search},'%')
      </if>
    </where>
    limit #{currentPage},#{pageSize}
  </select>

  <select id="getRolesCount" resultType="java.lang.Integer">
    select count(1) from roles
    <where>
      <if test="search != null and search != ''">
        rolename like concat('%',#{search},'%')
      </if>
    </where>
  </select>

  <insert id="insertRoleWithId" useGeneratedKeys="true" keyProperty="roleid">
    insert into roles(rolename) values (#{rolename})
  </insert>

  <insert id="insertRolePermission">
    insert into rolespermission(roleid, permissionid) VALUES
    <foreach item="permissionid" collection="permissions" separator=",">
      (#{roleid},#{permissionid})
    </foreach>
  </insert>

  <delete id="removeAllPermission">
    delete from rolespermission where roleid = #{roleid}
  </delete>

  <select id="getRoleListByUserId" resultMap="BaseResultMap">
    select a2.* from usermanager um
    left join userroles a on um.userid = a.userid
    left join roles a2 on a.roleid = a2.roleid
    where um.userid =#{userid}
  </select>
</mapper>